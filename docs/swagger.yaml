definitions:
  dto.LoginReq:
    properties:
      email:
        type: string
      password:
        maxLength: 16
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.PurchasePackageReq:
    properties:
      package_id:
        type: string
    required:
    - package_id
    type: object
  dto.RegisterReq:
    properties:
      age:
        minimum: 0
        type: integer
      bio:
        minLength: 15
        type: string
      email:
        type: string
      location:
        type: string
      name:
        minLength: 3
        type: string
      password:
        maxLength: 16
        minLength: 8
        type: string
      profile_pic_url:
        type: string
    required:
    - age
    - bio
    - email
    - location
    - name
    - password
    - profile_pic_url
    type: object
  dto.RegisterRes:
    properties:
      access_token:
        type: string
    type: object
  dto.SwipeReq:
    properties:
      profile_visit_id:
        type: string
      swipe_type:
        enum:
        - LEFT
        - RIGHT
        type: string
    required:
    - profile_visit_id
    - swipe_type
    type: object
  entities.PremiumPackage:
    properties:
      active_period:
        type: string
      created_at:
        type: string
      description:
        type: string
      feature_type:
        type: string
      id:
        type: string
      package_name:
        type: string
      price:
        type: number
    type: object
  entities.Profile:
    properties:
      age:
        type: integer
      bio:
        type: string
      created_at:
        type: string
      id:
        type: string
      location:
        type: string
      profile_pic_url:
        type: string
      user_id:
        type: string
    type: object
  entities.Purchase:
    properties:
      expired_date:
        type: string
      id:
        type: string
      package_id:
        type: string
      premium_package:
        $ref: '#/definitions/entities.PremiumPackage'
      purchase_date:
        type: string
      user_id:
        type: string
    type: object
  pkg.Response:
    properties:
      data: {}
      error: {}
      status:
        type: string
    type: object
info:
  contact: {}
  title: Dealls API Doc
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Log in a user with their email and password
      parameters:
      - description: User login request
        in: body
        name: loginReq
        required: true
        schema:
          $ref: '#/definitions/dto.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login response with access token
          schema:
            $ref: '#/definitions/dto.RegisterRes'
        "400":
          description: Validation failed
          schema:
            $ref: '#/definitions/pkg.Response'
        "401":
          description: Unauthorized, invalid credentials
          schema:
            $ref: '#/definitions/pkg.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.Response'
      summary: User login
      tags:
      - User
  /packages:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all available premium packages
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with list of premium packages
          schema:
            items:
              items:
                $ref: '#/definitions/entities.PremiumPackage'
              type: array
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.Response'
      summary: Get all premium packages
      tags:
      - Package
  /packages/purchase:
    post:
      consumes:
      - application/json
      description: Allows a user to purchase a specified premium package
      parameters:
      - description: Purchase package request
        in: body
        name: purchaseReq
        required: true
        schema:
          $ref: '#/definitions/dto.PurchasePackageReq'
      produces:
      - application/json
      responses:
        "201":
          description: Successful response with purchase details
          schema:
            $ref: '#/definitions/entities.Purchase'
        "400":
          description: Validation failed
          schema:
            $ref: '#/definitions/pkg.Response'
        "404":
          description: Package not found
          schema:
            $ref: '#/definitions/pkg.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.Response'
      security:
      - BearerAuth: []
      summary: Purchase a premium package
      tags:
      - Package
  /profiles/random:
    get:
      consumes:
      - application/json
      description: Retrieve a random user profile that has not been swiped by the
        current user
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with random profile
          schema:
            $ref: '#/definitions/entities.Profile'
        "404":
          description: No profile found
          schema:
            $ref: '#/definitions/pkg.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.Response'
      security:
      - BearerAuth: []
      summary: Get a random user profile
      tags:
      - Profile
  /profiles/swipe:
    post:
      consumes:
      - application/json
      description: Allows a user to swipe left or right on a specified profile
      parameters:
      - description: Swipe request
        in: body
        name: swipeReq
        required: true
        schema:
          $ref: '#/definitions/dto.SwipeReq'
      produces:
      - application/json
      responses:
        "200":
          description: Swipe recorded successfully
          schema:
            $ref: '#/definitions/pkg.Response'
        "400":
          description: Validation failed
          schema:
            $ref: '#/definitions/pkg.Response'
        "404":
          description: Profile not found
          schema:
            $ref: '#/definitions/pkg.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.Response'
      security:
      - BearerAuth: []
      summary: Swipe on a user profile
      tags:
      - Profile
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided information
      parameters:
      - description: User registration request
        in: body
        name: registerReq
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterReq'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/dto.RegisterRes'
        "400":
          description: Validation failed
          schema:
            $ref: '#/definitions/pkg.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.Response'
      summary: Register a new user
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: This is a documentation of Dealls backend service.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
